openapi: 3.0.0

paths:
  /adopter/{adopterId}/animal/{animalId}:
    get:
      summary: Given a user and a pet, show the adoption petition
      parameters:
        - name: adopterId
          in: path
          required: true
          description: client ID
        - name: animalId
          in: path
          required: true
          description: pet ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:showAdoption/invocations"
        httpMethod: "POST"
    put:
      summary: Creates a new adoption petition
      parameters:
        - name: adopterId
          in: path
          required: true
          description: client ID
        - name: animalId
          in: path
          required: true
          description: pet ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                house_type:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:createAdoption/invocations"
        httpMethod: "POST"
        
        
    delete:
      summary: approves an adoption petition and deletes it from the table
      parameters:
        - name: adopterId
          in: path
          required: true
          description: client ID
        - name: animalId
          in: path
          required: true
          description: pet ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:approveAdoption/invocations"
        httpMethod: "POST"
        
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
        
  /adopter/{adopterId}:
    get:
      summary: This endpoint shows a potential adopter
      parameters:
        - name: adopterId
          in: path
          required: true
          description: client ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getAdopter/invocations"
        httpMethod: "POST"
        
    put:
      summary: This endpoint puts a new adopter
      parameters:
        - name: adopterId
          in: path
          required: true
          description: client ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                apellido_paterno:
                  type: string
                apellido_materno:
                  type: string
                edad:
                  type: string
                sexo:
                  type: string
                email:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putAdopter/invocations"
        httpMethod: "POST"
        
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
  
  /animal/{animalId}:
    get:
      summary: This endpoint shows an animal
      parameters:
        - name: animalId
          in: path
          required: true
          description: client ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getAnimal/invocations"
        httpMethod: "POST"
        
    put:
      summary: This endpoint puts an animal/modifies it
      parameters:
        - name: animalId
          in: path
          required: true
          description: client ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                estado_de_salud:
                  type: string
                edad:
                  type: string
                ubicacion:
                  type: string
                IMG_1:
                  type: string
                IMG_2:
                  type: string
                IMG_3:
                  type: string
                IMG_4:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:updateAnimal/invocations"
        httpMethod: "POST"
        
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                {}
    delete:
      summary: This endpoint deletes an animal
      parameters:
        - name: animalId
          in: path
          required: true
          description: client ID
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:deleteAnimal/invocations"
        httpMethod: "POST"