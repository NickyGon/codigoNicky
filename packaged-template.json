AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: My Lambda Resources
Resources:
  PutAdopterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putAdopter
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: adopters.putAdopter
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyUsersTable
      - SNSCrudPolicy:
          TopicName:
            Fn::GetAtt:
            - MySNSTopic
            - TopicName
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /adopter/{adopterId}
            Method: PUT
  GetAdopterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAdopter
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: adopters.getAdopter
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyUsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /adopter/{adopterId}
            Method: GET
  PutAdoptionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: createAdoption
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: adopters.createAdoption
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyUsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /adopter/{adopterId}/animal/{animalId}
            Method: PUT
  ApproveAdoptionFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: approveAdoption
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: adopters.deleteAdoption
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyUsersTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MyUsersTable
      - SNSPublishMessagePolicy:
          TopicName:
            Fn::GetAtt:
            - MySNSTopic
            - TopicName
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /adopter/{adopterId}/animal/{animalId}
            Method: DELETE
  GetPetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAnimal
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: Dogs.getPet
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyUsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /animal/{animalId}
            Method: GET
  UpdatePetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: updateAnimal
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: Dogs.updatePet
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MyUsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /animal/{animalId}
            Method: PUT
  deletePetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deleteAnimal
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyUsersTable
      Handler: Dogs.deletePet
      Runtime: python3.6
      CodeUri: s3://origin-1234/b032bddb4ec4a5b4268bd8c50d786345
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyUsersTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MyUsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /animal/{animalId}
            Method: DELETE
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: my-api-gateway-9
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://origin-1234/d41c27464e48ccabb81dbbce166c4b54
  MyUsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: husky-app-adoption-DB
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: AdoptionEmailSNS
